SuperPy User Guide
Welcome to SuperPy, the best tool to keep track of products, transactions, and revenue! 
This guide will help you understand how to use SuperPy's various commands to manage your products and transactions efficiently.

Table of Contents
Commands Overview
Setting and Changing the Date
Adding a Product
Changing a Product
Buying a Product
Selling a Product
Generating Reports


Commands Overview
SuperPy supports the following main commands:

date: Set or change the current date.
add: Add a new product to the inventory.
change: Change details of an existing product.
buy: Record a purchase of a product.
sell: Record a sale of a product.
report: Generate various reports.
Each command has specific options and arguments to tailor its functionality to your needs.

Setting and Changing the Date
Use the date command to set or advance the current date. 
If anything requiring the date is done before actually setting a date, like buying a product or advancing the date, the current date will be set to "today"
Today being whatever the date is on starting. 

To set the date:
superpy date --set YYYY-MM-DD

Example:
superpy date --set 2024-05-30

Advance the Date
To advance the date by a specific number of days, can also be a negative number

superpy date --advance NUMBER_OF_DAYS

Example:
superpy date --advance 5


Adding a Product
Before a product can be used it needs to be added to the inventory, products.csv.
Use the add command to add a new product to do so.
A product name and product code have to be unique. 
Product code will be generated for you if none passed in.
The prices and expiracy time are defaults and can be overridden when the product is bought/sold.

superpy add PRODUCT_NAME [options]
Options:

-b, --buy_price: Default buy price (default: 0).
-s, --sell_price: Default sell price (default: 0).
-e, --expiracy_time: Default expiry time in days (default: 0).
-c, --product_code: Unique 5-digit code (if not provided, SuperPy generates one).

Example:
superpy add Apple -b 0.5 -s 1 -e 30


Changing a Product
Use the change command to update the details of an existing product. The new name or new product code have to be unique. 
Product names and codes can be changed after product already has been bought/sold but past transactions will not be altered, 
be cautious changing these whilst in stock.

Change a Product

superpy change PRODUCT_NAME_OR_CODE [options]
Options:

-nn, --new_name: New product name.
-b, --buy_price: New default buy price.
-s, --sell_price: New default sell price.
-e, --expiracy_time: New expiry time in days.
-c, --product_code: New unique 5-digit code.
--delete: Delete the product.

Example:

superpy change Apple -nn Green_Apple -s 1.2
superpy change Apple -nn "Green Apple" -s 1.2
superpy change "Green Apple" --delete


Buying a Product
Use the buy command to record a purchase. A product must be added to the inventory before you can buy.
The product name or product code can be used to buy a product. The amount bought is required.
If the buy price and/or expiracy time in days are different to the default in inventory, you can override them here.
Every bought amount will get its own buy code, generated by SuperPy. You cannot alter this code.

Buy a Product

superpy buy PRODUCT_NAME_OR_CODE AMOUNT [options]

Options:

-b, --buy_price: Buy price (if not given, default is used).
-e, --expiracy_time: Expiry time in days.

Example:

superpy buy Apple 100 -b 0.45 -e 25


Selling a Product
Use the sell command to record a sale. Product name or code can be used.
A product must be in stock in order to be sold. If nothing is in stock SuperPy will let you know.
If there is a number in stock but it's insufficient, SuperPy will let you know how many it could sell.
If the product you wish to sell has a specific buy code, you can enter it as well.
If not, SuperPy will always sell the product closest to expiracy first. #fifo

superpy sell PRODUCT_NAME_OR_CODE AMOUNT [options]
Options:

-s, --sell_price: Sell price (if not given, default is used).
-bc, --buy_code: Specific product's buy code.
Example:

superpy sell Apple 50 -s 1.1


Generating Reports
You can ask SuperPy for various reports, current_date, products, transactions, revenue and stock. One option can be used at a time.

Current_date report will simply show you what date SuperPy sees as today (stored in date.txt).

Products report will show you every product name and product code stored in the inventory (products.csv).

Transactions, stock and revenue require a date.
If no date is passed in, SuperPy will use the current_date (stored in date.txt).
If one date is passed in, SuperPy will use it instead of the stored current_date.
If two dates are passed in, the report will create a period starting from the earliest date and ending on the latest.
The order of passed in dates therefore doesn't matter.


Transactions report will return every item bought, sold and expired at the passed in date(s).
Optionally you can enter a product code or name to only receive that product's transactions.
With one passed in date, a triple bar chart will be created, one bar for bought, sold and expired, for each product
With two passed in dates, every date gets it's own set of triple bars for total bought, sold and expired
The terminal will also show all information.

Stock report will return what products are in stock and which buy_codes the stock includes.
Optionally you can enter a product code or name to only receive that product's stock.
If one date and one product are passed in, you will receive a pie chart with the total stock and the slices of which buy_codes it includes.
If one date and no specific product are passed in, you will receive a bar chart of what's in stock, a bar for each product.
If two dates and one product are passed in, you will receive a bar chart with a bar for each day.
If two dates with no specific products are passed in you will receive a line chart, with a line for each product.
The terminal will also show all information.

Revenue report will return the value of what has been bought, sold and expired. With the total sum of what the proft/loss is at the bottom.
If two dates are passed in, the entire period will be summed up.
The terminal will also show the information.


superpy report OPTION [DATE1] [DATE2] [options]


Options:

current_date: Report on the current date.
products: Report on products.
transactions: Report on transactions.
stock: Report on stock.
revenue: Report on revenue.

Additional options:

--product: Product name or code, if you wish to receive the report from only this item
Will only affect transactions and stock reports.
Example:

superpy report current_date
superpy report products
superpy report revenue 2018-06-06
superpy report stock 2018-05-04 2018-06-06
superpy report transactions 2024-05-01 2024-05-30 -p Apple

This user guide should help you understand how to use SuperPy effectively. 
